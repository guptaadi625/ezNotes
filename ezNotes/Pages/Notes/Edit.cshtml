@page "{id:int}"
@model ezNotes.Pages.Notes.EditModel
@{
    ViewData["Title"] = "Edit note";
}
<h2>Edit note</h2>

<form method="post">
    <input type="hidden" asp-for="Input.Id" />
    <div class="form-row">
        <label for="Title">Title</label>
        <input id="Title" class="input" asp-for="Input.Title" />
    </div>

    <div class="form-row">
        <label><input type="checkbox" asp-for="Input.IsArchived" /> Archived</label>
    </div>

    <div class="editor">
        <div>
            <label for="md">Markdown</label>
            <textarea id="md" class="input" asp-for="Input.ContentMd" rows="18" spellcheck="false"></textarea>
        </div>
        <div>
            <label>Preview</label>
            <div id="preview" class="preview">@Html.Raw(Model.HtmlPreview)</div>
        </div>
    </div>

    <div class="form-row actions">
        <button class="btn btn-primary" type="submit">Save</button>
        <a class="btn" asp-page="./Index">Back</a>
        <button class="btn" formaction="?handler=Delete" formmethod="post" onclick="return confirm('Delete this note?');">Delete</button>
    </div>
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script>
        const md = document.getElementById('md');
        const preview = document.getElementById('preview');
        function render(){ preview.innerHTML = marked.parse(md.value); }
        md.addEventListener('input', debounce(render, 150));
        function debounce(fn, n){ let t; return (...a)=>{ clearTimeout(t); t=setTimeout(()=>fn(...a), n); }; }
        render();
    </script>
}
